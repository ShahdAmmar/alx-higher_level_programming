Import function from module:
    >>> add_integer = __import__('0-add_integer').add_integer

one int argument:
    >>> add_integer(6)
    104

one int argument and check default second:
    >>> add_integer(0)
    98

one float:
    >>> add_integer(128.9)
    226

one negative float:
    >>> add_integer(-95.5)
    3
    
two integers:
    >>> add_integer(300, 5)
    305

two big integers:
    >>> add_integer(999999998, 999999999)
    1999999997

positive, negative integers:
    >>> add_integer(34263478, -89234582395)
    -89200318917

negative, positive integers:
    >>> add_integer(-13947692, 57234)
    -13890458

an integer and a float:
    >>> add_integer(125, 8.987)
    133

a float and an integer:
    >>> add_integer(234234.43545, 4352345)
    4586579

two floats:
    >>> add_integer(0.8, 0.8)
    0

infinity:
    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

nan:
    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

first arg invalid:
    >>> add_integer("foo", 0)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

second arg invalid:
    >>> add_integer(123123, [])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

both args invalid:
    >>> add_integer(None, None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

two strings:
    >>> add_integer("foo", "bar")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

float overflow:
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
